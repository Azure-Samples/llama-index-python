# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic
    if pydantic.__version__.startswith("1."):
        raise ImportError
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CloudDocumentCreate(pydantic.BaseModel):
    """
    Create a new cloud document.
    """

    text: str
    metadata: typing.Dict[str, typing.Any]
    excluded_embed_metadata_keys: typing.Optional[typing.List[str]]
    excluded_llm_metadata_keys: typing.Optional[typing.List[str]]
    page_positions: typing.Optional[typing.List[int]] = pydantic.Field(
        description="indices in the CloudDocument.text where a new page begins. e.g. Second page starts at index specified by page_positions[1]."
    )
    id: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
