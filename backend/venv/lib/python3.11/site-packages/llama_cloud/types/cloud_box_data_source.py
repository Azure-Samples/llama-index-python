# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .box_auth_mechanism import BoxAuthMechanism

try:
    import pydantic
    if pydantic.__version__.startswith("1."):
        raise ImportError
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class CloudBoxDataSource(pydantic.BaseModel):
    """
    Base component object to capture class names.
    """

    folder_id: typing.Optional[str] = pydantic.Field(description="The ID of the Box folder to read from.")
    authentication_mechanism: BoxAuthMechanism = pydantic.Field(
        description="The type of authentication to use (Developer Token or CCG)"
    )
    developer_token: typing.Optional[str] = pydantic.Field(
        description="Developer token for authentication if authentication_mechanism is 'developer_token'."
    )
    client_id: typing.Optional[str] = pydantic.Field(
        description="Box API key used for identifying the application the user is authenticating with"
    )
    client_secret: typing.Optional[str] = pydantic.Field(description="Box API secret used for making auth requests.")
    user_id: typing.Optional[str] = pydantic.Field(description="Box User ID, if provided authenticates as user.")
    enterprise_id: typing.Optional[str] = pydantic.Field(
        description="Box Enterprise ID, if provided authenticates as service."
    )
    class_name: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
